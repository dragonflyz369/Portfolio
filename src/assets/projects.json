[
  {
    "id": 1,
    "image": "mar.png",
    "title": "MAR Developer Portal",
    "description": "A place where developers using REST endpoints for the Master Address Repository (MAR) in DC can find out and test various endpoint calls.  Ability to obtain an API key for usage with the MAR so that users can be traced (and overusers blocked).",
    "work": "Was the primary developer of the site. Utilized Swagger and customized it to fit into the page better. Redesigned the sample so that it uses Leaflet and to make it a bit more responsive.",
    "links": "https://developers.data.dc.gov/",
    "tech": "Razor,Leaflet,ElasticSearch,.NET Core",
    "tags": "OCTO,DC Government,API Endpoint,Help Guide"
  },
  {
    "id": 2,
    "image": "dcsor.png",
    "title": "DC Sex Offender Registry ",
    "description": "A place where residents of DC can look up their address and find locally registered sex offenders per policy.",
    "work": "I was a primary developer on the team. I promoted the use of Leaflet and was the primary developer for the layout of the site. I optimized returns and tried to make the map experience more user friendly and responsive.",
    "links": "https://sexoffender.dc.gov/",
    "tech": "Angular,Leaflet,ArcServer Map Services,.NET Core",
    "tags": "OCTO,DC Government,Community Resource"
  },
  {
    "id": 3,
    "image": "schools.png",
    "title": "DC School Finder",
    "description": "Where residents of DC can find out which school boundary they belong to.  This can help them decide if they would like to file an application with the DC Schools Lottery to go to another school. It also shows them changes in school zoning when boundaries change from year to year.",
    "work": "Utilizing StencilJS allowed me to code the application and host it on our servers and then have the Drupal team be able to just include a div tag to add the widget to the CMS web pages - creating a seamless experience for users. I knew that most just needed the school boundary information, so the map is a secondary item incase they would like to see it more visually.",
    "links": "https://enrolldcps.dc.gov/node/41",
    "tech": "StencilJs,ArcServer Map Services,Leaflet",
    "tags": "OCTO,DC Government,Community Resource"
  },
  {
    "id": 4,
    "image": "wrr.png",
    "title": "Watershed Resource Registry",
    "description": "A tool for various industry and environmental agencies to see a score for where are the best places to restore and preserve wetlands.  Scaled to be used by multiple states as the project developed.",
    "work": "Was the primary developer at the beginning of the project. Models were created by my team, and I was responsible for creating a service that could easily visualize and display the results for users. I came up with a way to asynchronously query several layers and return values as they finished, since several layers were queried to show the different values that were used in the calculation. I also implemented ArcServer publishing strategies and tuning so that all the small polygons could best be displayed to users - this included changing it to an Image Service with scale levels vs a feature service. Showing users the data with the Image services but query the features using the Map Service. Developed the configuration property used in the URL to use the same WebAppBuilder site but have different state configs load based on value.",
    "links": "https://watershedresourcesregistry.org/map/?config=stateConfigs/maryland.json",
    "tech": "WebAppBuilder,ArcServer Map Services,ArcServer SOE",
    "tags": "MDE,EPA,Decision Making Tool,Environmental"
  },
  {
    "id": 5,
    "image": "imapviewer.png",
    "title": "MD iMap Viewer",
    "description": "A map interface to view different available iMap produced services and share them with the public.",
    "work": "I moved the application to WebAppBuilder and added in the Data Cataloging tool that allowed users to pull from available layers as they were added to the catalog. It could dynamically pull from various sources and categorize. It also created a way that users could share the map with others including which layers they had turned on by adding query parameters to the URL.  Has since been deprecated but included a link to the ESRI Fed UC presentation I co-presented on, demonstrating the capabilities of the tool.",
    "links": "https://proceedings.esri.com/library/userconf/fed16/papers/fed_69.pdf",
    "tech": "WebAppBuilder,Javascript",
    "tags": "DoIT,MD Government,Data Catalog Viewer"
  },
  {
    "id": 6,
    "image": "serverstatus.png",
    "title": "MD iMap Server Status",
    "description": "A tool for viewing the status of the Map Services hosted by the iMAP team.  Could check if the service was up and then give users an up or down status.",
    "work": "Some tweaks have been made since I implemented, but much of what I created is still in the view. Utilizing a python script to check the server for status of each service, it then displays the service status and available formats for the users.",
    "links": "https://imap.maryland.gov/pages/full-system-status",
    "tech": "Angular,Python",
    "tags": "DoIT,MD Government,Server Status"
  },
  {
    "id": 7,
    "image": "dfirm.png",
    "title": "DFIRM - Flood Risk Application",
    "description": "A tool to aid in determining your possible flood risk in the state of Maryland.",
    "work": "Was the primary developer on the project. Created the WebAppBuilder application and developed the SOE for returning information to the user in a timely manner. Showed a carousel of various information that would be helpful to the user after clicking and generating results.",
    "links": "https://mdfloodmaps.net/map/",
    "tech": "WebAppBuilder,ArcServer Map Services,ArcServer SOE",
    "tags": "MDE,Decision Making Tool,Environmental"
  }
]
