title,description,work,links,tech,tags
MAR Developer Portal,A place where developers using REST endpoints for the Master Address Repository (MAR) in DC can find out and test various endpoint calls.  Ability to obtain an API key for usage with the MAR so that users can be traced (and overusers blocked).,Was the primary developer of the site. Utilized Swagger and customized it to fit into the page better. Redesigned the sample so that it uses Leaflet and to make it a bit more responsive.,https://developers.data.dc.gov/,"Razor,Leaflet,","OCTO,DC Government,API Endpoint,Help Guide"
DC Sex Offender Registry ,A place where residents of DC can look up their address and find locally registered sex offenders per policy.,I was a primary developer on the team. I promoted the use of Leaflet and was the primary developer for the layout of the site. I optimized returns and tried to make the map experience the more user friendly and responsive.,https://sexoffender.dc.gov/,"Angular,Leaflet,ArcServer Map Services,.NET Core","OCTO,DC Government,Community Resource"
DC School Finder,Where residents of DC can find out which school boundary they belong to.  This can help them decide if they would like to file an application with the DC Schools Lottery to go to another school. It also shows them changes in school zoning when boundaries change from year to year.,"Utilizing StencilJS allowed me to code the application and host it on our servers and then have the Drupal team be able to just include a div tag to add the widget to the CMS web pages - creating a seamless experience for users. I knew that most just needed the school boundary information, so the map is a secondary item incase they would like to see it more visually.",https://enrolldcps.dc.gov/node/41,"StencilJs,ArcServer Map Services,Leaflet","OCTO,DC Government,Community Resource"
Watershed Resource Registry,A tool for various industry and environmental agenices to see a score for where are the best places to restore and preserver wetlands.,"Was the primary developer at the begining of the project. Models were created by my team, and I was responsible for creating a service that could easily visualize and display the results for users. I created an ArcSOE service to get all the intersecting layers that helped give users the score. I also implemented ArcServer publishing strategies and tuning so that all the small polygons could best be displayed to users - this included changing it to a Map Service with scale levels vs a feature service. The ArcSOE could then do the returning of information and speed up the query.  My WebAppBuilder version has been deprecated but the link is to a presentation utilizing it when I was working on it.",https://mde.maryland.gov/programs/Marylander/outreach/Documents/WaterResearchRegistry.pdf,"WebAppBuilder,ArcServer Map Services,ArcServer SOE","MDE,EPA,Decision Making Tool,Environmental"
MD iMap Viewer,A map interface to view different available iMap produced services and share them with the public.,I moved the application to WebAppBuilder and added in the Data Cataloging tool that allowed users to pull from available layers as they were added to the catalog. It could dynamically pull from various sources and categorize. It also created a way that users could share the map with others including which layers they had turned on by adding query parameters to the URL.,https://proceedings.esri.com/library/userconf/fed16/papers/fed_69.pdf,"WebAppBuilder,Javascript","DoIT,MD Government,Data Catalog Viewer"
MD iMap Server Status,A tool for viewing the status of the Map Services hosted by the iMAP team.  Could check if the service was up and then give users an up or down status.,"Some tweaks have been made since I implemented, but much of what I created is still in the view. Utilizing a python script to check the server for status of each service, it then displays the service status and available formats for the users.",https://imap.maryland.gov/pages/full-system-status,"Angular,Python","DoIT,MD Government,Server Status"